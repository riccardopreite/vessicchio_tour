(* ::Package:: *)

(* ::Input:: *)
(*(* :Title:MusicUtilities*)*)
(*(* :Context:MusicUtilities`*)*)
(*(* :Author:GS*)*)
(*(* :Summary:music lesson utilities*)*)
(*(* :Copyright:*)*)
(*(* :Package Version:1,Maggio 2020*)*)
(*(* :Mathematica Version:11.2*)*)
(*(* :History:*)*)
(*(* :Sources:*)*)
(*(* :Limitations:*)(* :Discussion:*)*)


(* ::Input:: *)
(**)
(*BeginPackage["MusicUtilities` "]*)
(*listOfList::usage="listOfList [list]*)
(*Check if a list have another list inside."*)


(* ::Input:: *)
(*toLabelList::usage="toLabelList [toConv,toApp,type]*)
(*Convert the list of musical notes (toConv) into the sistem specified by type ('u' : us, 'e': eu)."*)
(**)
(*listOfList[toCheck_] := Module[*)
(*{i = 1,toRet = False},*)
(*lenList = Length[toCheck];*)
(*For[i=1,i<  lenList+1,i++,*)
(*If[Length[toCheck[[i]]] != 0,*)
(*toRet = True; i = lenList;*)
(*]*)
(*] ;*)
(*Return[toRet];                     *)
(*]*)
(**)
(**)
(**)
(**)
(*toLabelList[{}]:= Module[{},Return["--"]]; *)
(*toLabelList[toConv_  /; listOfList[toConv] == False, toApp_,type_]:=Module[*)
(*{notesStart = {},notesEnd = {}, i = 1,toConvert = toConv, toAppend = toApp},*)
(*If[type == "u",*)
(*notesStart =notesEU;*)
(*notesEnd = notesUS,*)
(*notesStart =notesUS;*)
(*notesEnd = notesEU*)
(*];*)
(*lenList = Length[toConvert] + 1;*)
(*temp = toAppend;*)
(*For[i=1,i<  lenList,i++,*)
(**)
(*index =FirstPosition[notesStart,toConvert[[i]]];*)
(*newElem = Part[notesEnd[[index]],1];*)
(*temp = Append[temp, newElem];*)
(**)
(* ];*)
(*Return[temp];*)
(*]*)
(**)
(*toLabelList[toConv_/; listOfList[toConv] == True,toApp_,type_]:=Module[*)
(*{notesStart = {},notesEnd = {}, i = 1,toConvert = toConv, toAppend = toApp, lenList = Length[toConv] +1},*)
(*If[type == "u",*)
(*notesStart =notesEU;*)
(*notesEnd = notesUS,*)
(**)
(*notesStart =notesUS;*)
(*notesEnd = notesEU*)
(*];*)
(*temp = toAppend;*)
(*For[i=1,i <  lenList,i++, *)
(*If[*)
(*Length[toConvert[[i]]] == 0,*)
(**)
(*index =FirstPosition[notesStart,toConvert[[i]]]; (*then*)*)
(*newElem = Part[notesEnd[[index]],1];*)
(*temp = Append[temp, newElem];  ,*)
(**)
(*newTemp = {};*)
(*newList = toConvert[[i]];*)
(*temp = Append[temp,toLabelList[newList,newTemp ,type]] ;(*else*)*)
(*];*)
(*];*)
(*Return[temp]*)
(*]*)
(**)
(**)
(**)
(**)
(**)
(**)


(* ::Input:: *)
(*End[]*)
(*EndPackage[]*)
